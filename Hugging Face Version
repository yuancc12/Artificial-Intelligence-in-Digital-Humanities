from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, AudioMessage, TextSendMessage
from transformers import pipeline
import os
import tempfile
import requests

# 初始化 Flask 和 LINE Bot
app = Flask(__name__)
line_bot_api = LineBotApi('請輸入LINE API')
handler = WebhookHandler('請輸入LINE Secret')

# Whisper 語音識別管道
whisper = pipeline('automatic-speech-recognition', model='openai/whisper-medium', device=-1)

# 接收 LINE 的 Webhook 事件
@app.route("/callback", methods=['POST'])
def callback():
    # 確認 LINE 的簽名是否正確
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return 'OK'

# 處理接收到的音訊消息
@handler.add(MessageEvent, message=AudioMessage)
def handle_audio_message(event):
    # 下載音訊文件
    message_content = line_bot_api.get_message_content(event.message.id)
    with tempfile.NamedTemporaryFile(dir='.', suffix='.m4a', delete=False) as tf:
        for chunk in message_content.iter_content():
            tf.write(chunk)
        temp_file_path = tf.name

    # 使用 Whisper 進行語音識別
    text_result = whisper(temp_file_path)

    # 回傳轉錄結果
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=text_result['text'])
    )

# 主程序
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
